{
    "id": "e7307da0-85f4-11e9-9dec-fdd4f9b653a3",
    "name": "google Analytics",
    "friendlyName": "Google Analytics Experiments",
    "description": "Google Analytics Experiments extension for Azure Pipelines",
    "author": "Microsoft Corporation",
    "helpMarkDown": "[Learn more about this task](https://aka.ms/googleanalyticsexperimentsreadme)",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
    "version": {
        "Major": "0",
        "Minor": "0",
        "Patch": "1"
    },
    "preview": "true",
    "minimumAgentVersion": "1.95.0",
    "instanceNameFormat": "Google Analytics Experiments: $(action)",
    "inputs": [
        {
            "name": "googleEndpoint",
            "type": "connectedService:googleanalytics",
            "label": "Analytics Connection",
            "required": true,
            "helpMarkDown": "Select the Analytics service endpoint to be used to manage Google Analytics experiments"
        },
        {
            "name": "accountId",
            "type": "pickList",
            "label": "Account Id",
            "required": true,
            "helpMarkDown": "Account Id refers to the gmail account which is linked to Google analytics"
        },
        {
            "name": "webPropertyId",
            "type": "pickList",
            "label": "Web Property Id",
            "required": true,
            "helpMarkDown": "Web property id refers to your specific website on which experiment is set up"
        },
        {
            "name": "profileId",
            "type": "pickList",
            "label": "Profile Id",
            "required": true,
            "helpMarkDown": "Profile id is used to provide user management. Particular profile id refers \nto particular user with certain access control"
        },
        {
            "name": "experimentName",
            "type": "pickList",
            "label": "Experiment Name",
            "required": true,
            "helpMarkDown": "Choose which experiment needs to be updated"
        },
        {
            "name": "action",
            "type": "pickList",
            "label": "Action",
            "defaultValue": "UpdateExperiment",
            "required": true,
            "options": {
                "UpdateExperiment": "Start or Update experiment",
                "StopExperiment": "Stop experiment"
            },
            "helpMarkDown": "Select the action to be performed on above experiment"
        },
        {
            "name": "jsonFile",
            "type": "filePath",
            "label": "Experiment Configuration File",
            "helpMarkDown": "Json file to configure the experiment. Experiment Id is a mandatory field"
        },
        {
            "name": "trafficCoverage",
            "type": "string",
            "label": "Traffic Coverage",
            "helpMarkDown": "A floating-point number between 0 and 1.\nSpecifies the fraction of the traffic that\nparticipates in the experiment.\nCan be changed for a running experiment"
        },
        {
            "name": "equalWeighting",
            "type": "pickList",
            "label": "Equal Distribution",
            "defaultValue": "True",
            "options": {
                "True": "True",
                "False": "False"
            },
            "helpMarkDown": "Boolean specifying whether to distribute\ntraffic evenly across all variations.\nIf the value is False, content experiments\nfollows the default behavior of adjusting\ntraffic dynamically based on variation performance"
        }
    ],
    "dataSourceBindings": [
        {
            "endpointId": "$(googleEndpoint)",
            "target": "experimentName",
            "dataSourceName": "experimentList",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }",
            "parameters": {
                "accountId": "$(accountId)",
                "webPropertyId": "$(webPropertyId)",
                "profileId": "$(profileId)"
            }
        },
        {
            "endpointId": "$(googleEndpoint)",
            "target": "accountId",
            "dataSourceName": "fetchAccountId",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }"
        },
        {
            "endpointId": "$(googleEndpoint)",
            "target": "webPropertyId",
            "dataSourceName": "fetchWebPropertyId",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{name}}}\" }",
            "parameters": {
                "accountId": "$(accountId)"
            }
        },
        {
            "endpointId": "$(googleEndpoint)",
            "target": "profileId",
            "dataSourceName": "fetchProfileId",
            "resultTemplate": "{ \"Value\" : \"{{{id}}}\", \"DisplayValue\" : \"{{{id}}}\" }",
            "parameters": {
                "webPropertyId": "$(webPropertyId)",
                "accountId": "$(accountId)"
            }
        }
    ],
    "execution": {
        "Node": {
            "target": "index.js"
        }
    },
    "messages": {
        "ExperimentWithIdUpdatedSuccessfully": "Experiment with Id: '%s' updated successfully",
        "FailedToUpdateExperiment": "Failed to update experiment with following error: %s",
        "FailedToFetchExperiment": "Failed to fetch experiment with Id: %s",
        "TrafficValueNotValid": "%s is not a valid traffic value.",
        "TrafficVariationKeyNotDefined": "Traffic Variations does not contain a value for the variation key: %s.",
        "UnableToFindValidArguments": "Unable to find valid arguments. ArgumentString: %s",
        "InvalidVariationKey": "Invalid variation key: %s",
        "NotValidValueForVariationKey": "%s cannot be parsed as a number for the key: %s",
        "TotalTrafficValueNotValid": "Traffic values must be between 0 and 1. Provide valid traffic values. current value: '%s'.",
        "TaskSucceeded": "Task succeeded.",
        "IdMismatch": "Experiment Id in provided in json file is different than provided in input",
        "InvalidAction": "Proper action is not selected",
        "PauseFailed": "Failed to pause the experiment as status is not RUNNING",
        "StopFailed": "Cannot Stop an experiment that is in state ENDED",
        "UpdateFailed": "Failed to update the experiment as it is in state ENDED",
        "IncorrectFilePath": "File path provided is incorrect",
        "FailedToParseFile": "Failed to parse the given json file with following error:\n %s",
        "FailedToFetchInputs": "Failed to fetch input with the following error:\n %s",
        "FileNotFound": "The JSON file is not found at the given Path. ERROR: %s",
        "ExperimentFetchedSuccessfully": "Successfully fetched the experiment with name: %s",
        "AccessTokenGenerationFailed": "Failed to generate access token with Error: %s",
        "FailedToFetchCurrentExperiment": "Failed to fetch current ExperimentWithIdUpdatedSuccessfully with the following error:\n %s"
    }
}
