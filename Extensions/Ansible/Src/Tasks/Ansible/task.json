{
    "id": "6f650d20-9c5d-4cce-ad66-e68742ceadf5",
    "name": "Ansible",
    "friendlyName": "Ansible",
    "description": "This task helps dev-ops to execute the ansible playbook using release management. It can execute the playbook using ansible tower, or take the playbook and inventory to execute via command line interface",
    "helpMarkDown": "[More Information](http://go.microsoft.com/fwlink/?LinkId=821892)",
    "category": "Deploy",
    "visibility": [
        "Build",
        "Release"
    ],
	"runsOn": [
        "Agent"
    ],
    "author": "Microsoft Corporation",
    "version": {
        "Major": 0,
        "Minor": 0,
        "Patch": 1
    },
    "demands": [],
    "instanceNameFormat": "Run playbook",
    "groups": [
        {
            "name": "playbook",
            "displayName": "Playbook",
            "isExpanded": true,
            "visibleRule": "ansibleInterface = cli"
        },
        {
            "name": "inventory",
            "displayName": "Inventory",
            "isExpanded": true,
            "visibleRule": "ansibleInterface = cli"
        },
        {
            "name": "advanced",
            "displayName": "Advanced",
            "isExpanded": true,
            "visibleRule": "ansibleInterface = cli"
        }
    ],
    "inputs": [
        {
            "name": "ansibleInterface",
            "type": "pickList",
            "label": "Execution target",
            "required": true,
            "defaultValue": "cli",
            "options": {
                "cli": "Command line on Ansible machine",
                "ansibleTower": "Ansible Tower"
            },
            "helpMarkDown": "Select either command line execution on Ansible machine or Ansible tower execution to run playbook."
        },
        {
            "name": "connectionOverSsh",
            "type": "connectedService:ssh",
             "label": "SSH endpoint",
            "defaultValue": "",
            "required": true,
            "visibleRule": "ansibleInterface = cli",
            "helpMarkDown": "Ansible machine endpoint"
        },
        {
            "name": "playbookSource",
            "type": "pickList",
            "label": "Source",
            "defaultValue": "agentMachine",
            "options": {
                "agentMachine": "Agent machine",
                "ansibleMachine": "Ansible machine"
            },
            "required": true,
            "helpMarkDown": "Select agent machine, if playbook is located on automation agent. In this case playbook is copied to ansible machine. Otherwise, select ansible machine.",
            "groupName": "playbook"
        },
        {
            "name": "playbookRoot",
            "type": "filePath",
            "label": "Root",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Root path of the playbook files on the automation agent. This is the folder where playbook and associated files are located. All the files in this folder will be copied to Ansible machine",
            "visibleRule": "playbookSource = agentMachine",
            "groupName": "playbook"
        },
        {
            "name": "playbookPathAgentMachine",
            "type": "filePath",
            "label": "Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Path to the playbook file to execute on the automation agent.",
            "visibleRule": "playbookSource = agentMachine",
            "groupName": "playbook"
        },
        {
            "name": "playbookPathAnsibleMachine",
            "type": "string",
            "label": "Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Path of the playbook files on execute on the ansible machine.",
            "visibleRule": "playbookSource = ansibleMachine",
            "groupName": "playbook"
        },
        {
            "name": "inventories",
            "type": "pickList",
            "label": "Inventory",
            "defaultValue": "noInventory",
            "options": {
                "noInventory": "Do not specify inventory",
                "file": "File",
                "hostList": "Host list",
                "inlineContent": "Inline"
            },
            "required": true,
            "helpMarkDown": "Select the source of inventories",
            "groupName": "inventory"
        },
        {
            "name": "inventoryFileSource",
            "type": "pickList",
            "label": "Source",
            "defaultValue": "agentMachine",
            "options": {
                "agentMachine": "Agent machine",
                "ansibleMachine": "Ansible machine"
            },
            "required": true,
            "helpMarkDown": "Specify the location of inventory either on agent machine or ansible machine",
            "visibleRule": "inventories = file",
            "groupName": "inventory"
        },
        {
            "name": "inventoryFileAgentMachine",
            "type": "filePath",
            "label": "Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Specify the path to inventory host file on automation agent.",
            "visibleRule": "inventoryFileSource = agentMachine",
            "groupName": "inventory"
        },
        {
            "name": "inventoryFileAnsibleMachine",
            "type": "string",
            "label": "Path",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Specify the path to inventory host file on ansible machine",
            "visibleRule": "inventoryFileSource = ansibleMachine",
            "groupName": "inventory"
        },
        {
            "name": "inventoryHostList",
            "type": "string",
            "label": "Host list",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Specify the comma separated host list",
            "visibleRule": "inventories = hostList",
            "groupName": "inventory"
        },
        {
            "name": "inventoryInlineDynamic",
            "type": "boolean",
            "label": "Dynamic inventory",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Check this box if a dynamic inventory is used. For more details see the ansible documentation for Dynamic Inventory",
            "visibleRule": "inventories = inlineContent",
            "groupName": "inventory"
        },
        {
            "name": "inventoryInlineContent",
            "type": "multiLine",
            "label": "Content",
            "defaultValue": "",
            "required": true,
            "helpMarkDown": "Mention Inventories inline",
            "visibleRule": "inventories = inlineContent",
            "groupName": "inventory"
        },  
        {
            "name": "sudoEnabled",
            "type": "boolean",
            "label": "Sudo",
            "defaultValue": false,
            "required": false,
            "helpMarkDown": "Run operations with sudo. It works only when the ansible user is sudoer with nopasswd option.",
            "groupName": "advanced"
        },     
        {
            "name": "sudoUser",
            "type": "string",
            "label": "Sudo user",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Desired sudo user. \"root\" is used when this field is empty.",
            "visibleRule": "sudoEnabled = true",
            "groupName": "advanced"
        },  
        {
            "name": "args",
            "type": "multiLine",
            "label": "Additional Parameters",
            "defaultValue": "",
            "required": false,
            "helpMarkDown": "Any additional parameters to pass to the ansible command. The content of this textbox will be passed as is to the command line",
            "groupName": "advanced"
        },
        {
            "name": "connectionAnsibleTower",
            "type": "connectedService:AnsibleTower",
             "label": "Tower endpoint",
            "defaultValue": "",
            "required": true,
            "visibleRule": "ansibleInterface = ansibleTower",
            "helpMarkDown": "Ansible Tower server endpoint"
        },
        {
            "name": "jobTemplateName",
            "type": "pickList",
            "label": "Job Template Name",
            "defaultValue": "",
            "required": true,
            "visibleRule": "ansibleInterface = ansibleTower",
            "helpMarkDown": "Arguments to pass to the shell script."
        }
    ],
    "dataSourceBindings": [
        {
            "target": "jobTemplateName",
            "endpointId": "$(connectionAnsibleTower)",
            "dataSourceName": "JobTemplate"
        }
    ],
    "execution": {
        "Node": {
            "target": "main.js",
            "argumentFormat": ""
        }
    },
    "messages": {
        "UseDefaultPort": "Using port 22 which is the default for SSH since no port was specified.",
        "SettingUpSshConnection": "Trying to setup SSH connection to %s@%s:%s",
        "ConnectionFailed": "Failed to connect to ansible machine. Verify the SSH endpoint details. Error: %s.",
        "RemoteCopyFailed": "Failed to copy script to ansible machine. Error: %s.",
        "RemoteCmdExecutionErr": "Command failed with errors on ansible machine.",
        "RemoteCmdNonZeroExitCode": "Command %s exited with code %s.",
        "RemoteFileCleanUpFailed": "Failed to delete the script file copied to the ansible machine. Error = %s.",
        "JobTemplateNotPresent": "Failed to locate job template. Job template with name %s is not present.",
        "Ansible_ConstructorFailed": "Cannot initialize ansible: %s.",
        "FailedToGetJobDetails": "Failed to get job details. Ansible returns with error code %s and message %s.",
        "CouldnotLaunchJob": "Failed to launch job. Ansible returns with error code %s and message %s."
    }
}